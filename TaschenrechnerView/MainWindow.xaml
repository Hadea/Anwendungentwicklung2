<Window x:Class="TaschenrechnerView.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TaschenrechnerView"
        xmlns:vm="clr-namespace:TaschenrechnerLogic;assembly=TaschenrechnerLogic"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <!-- der Converter wird als statische ressource bereitgestellt sodass die radiobutton über den Key den converter finden
        der logik-namespace wurde zusätzlich unter dem Kürzel vm bekannt gemacht, da die verfügbaren operationen in der logik stehen-->
    <Window.Resources>
        <local:EnumBoolConverter x:Key="EnumBoolConverter"/>
    </Window.Resources>
    <Grid Margin="5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition Width="200" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="22" />
            <RowDefinition Height="22" />
            <RowDefinition Height="22" />
        </Grid.RowDefinitions>
        <!-- Textboxen binden sich jeweils an ein Operator-Property welche durch den updatesourcetrigger direkt beim tippen
            aktualisiert werden. die Properties sorgen dann selbst dafür das das ergebnis stimmt-->
        <TextBox Text="{Binding OperatorA, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Grid.Column="0" />
        <TextBox Text="{Binding OperatorB, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Grid.Column="1" />
        <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
            <!-- Die Radiobutton binden sich mit ihrem IsChecked an den Operator. Da der Operator vom Typ Enum ist und IsChecked ein Bool erwartet müssen wir konvertieren
                Der Converter schaut ob der Radiobutton dem ausgewählten wert entspricht und sagt ihm dann ob er an oder aus ist
                Die Funktionalität der GroupName wird damit eigendlich nicht mehr benötigt, ist aber der vollständigkeit
                halber trotzdem eingetragen-->
            <RadioButton GroupName="Operation" Content="Addition" IsChecked="{Binding Operator, Converter={StaticResource EnumBoolConverter}, ConverterParameter={x:Static vm:Operations.Addition}}" />
            <RadioButton GroupName="Operation" Content="Subtraction" IsChecked="{Binding Operator, Converter={StaticResource EnumBoolConverter}, ConverterParameter={x:Static vm:Operations.Subtraction}}" />
            <RadioButton GroupName="Operation" Content="Multiplication" IsChecked="{Binding Operator, Converter={StaticResource EnumBoolConverter}, ConverterParameter={x:Static vm:Operations.Multiplication}}" />
            <RadioButton GroupName="Operation" Content="Division" IsChecked="{Binding Operator, Converter={StaticResource EnumBoolConverter}, ConverterParameter={x:Static vm:Operations.Division}}" />
            <RadioButton GroupName="Operation" Content="Modulo" IsChecked="{Binding Operator, Converter={StaticResource EnumBoolConverter}, ConverterParameter={x:Static vm:Operations.Modulo}}" />
        </StackPanel>
        <!-- Durch das auslesen von Result wird das Ergebnis in der Logik erzeugt -->
        <TextBlock Text="{Binding Result}" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" />
    </Grid>
</Window>
